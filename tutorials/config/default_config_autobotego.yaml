tasks: [train] # [train, simulate, open_nuboard]
model_name: autobotego # [vector, autobotego]

# adapt training params
model_fct: train # [train, test, cache]
dataset: nuplan # [nuplan, nuplan_challenge, nuplan_mini]
nb_scenarios: 500
nb_epochs: 1
batch_size: 8
lightning_accelerator: ddp_spawn
nb_workers: 8

predict_yaw: False
draw_visualizations: False # inside the model (for every scenario)

# adapt simulation params
planner: ml_planner  # [simple_planner, ml_planner]
challenge: open_loop_boxes  # [open_loop_boxes, closed_loop_nonreactive_agents, closed_loop_reactive_agents]
scenarios: all_scenarios # [all_scenarios, nuplan_challenge_scenarios, one_continuous_log, one_of_each_scenario_type] # initially select all scenarios in the database
nb_scenarios_per_type: 2 # use 10 scenarios per scenario type
scenario_types: [
  starting_straight_traffic_light_intersection_traversal,
  high_lateral_acceleration,
  changing_lane,
  high_magnitude_speed,
  low_magnitude_speed,
  starting_left_turn,
  starting_right_turn,
  stopping_with_lead,
  following_lane_with_lead,
  near_multiple_vehicles,
  traversing_pickup_dropoff,
  behind_long_vehicle,
  waiting_for_pedestrian_to_cross,
  stationary_in_traffic
]

# for open-loop simulation metrics summary
selected_ol_stats: [planner_expert_ADE_horizon_3,
                    planner_expert_FDE_horizon_3,
                    planner_expert_FHE_horizon_3,
                    planner_expert_AHE_horizon_3,
                    planner_expert_ADE_horizon_8,
                    planner_expert_FDE_horizon_8,
                    planner_expert_FHE_horizon_8,
                    planner_expert_AHE_horizon_8]
# for closed-loop simulation metrics summary
selected_cl_stats: [ego_is_comfortable,
                    drivable_area_compliance,
                    corners_in_drivable_area,
                    abs_ego_lon_jerk_within_bounds,
                    abs_ego_lon_acceleration_within_bounds,
                    time_to_collision_within_bound,
                    speed_limit_compliance,
                    abs_ego_jerk_within_bounds,
                    ego_expert_progress_along_route_ratio, # unit: ratio # normalize
                    no_ego_at_fault_collisions,
                    abs_ego_lat_acceleration_within_bounds,
                    ego_is_making_progress,
                    abs_ego_yaw_acceleration_within_bounds,
                    ego_lane_change_fail_rate_below_threshold,
                    abs_ego_yaw_rate_within_bounds,]

training_options:
  optimizer: adam_autobots
  optimizer.lr: 7e-4
  # +optimizer.eps: 1e-4
  lr_scheduler: multistep_lr # [multistep_lr]
  lr_scheduler.milestones: [4, 8, 12, 16, 20, 24, 28]
  lr_scheduler.gamma: 0.6
  callbacks.visualization_callback.all_modes: True
  model.model_params.predict_yaw: ${predict_yaw}
  model.model_params.draw_visualizations: ${draw_visualizations}
  model.model_params.log_dir: ${log_dir}
  # scenario_filter.scenario_types: ${scenario_types} # train on selection of scenarios

simulation_options:
  scenario_filter.scenario_types: ${scenario_types}
  model.model_params.predict_yaw: ${predict_yaw}
  model.model_params.draw_visualizations: ${draw_visualizations}
  model.model_params.log_dir: ${log_dir}
  main_callback.metric_summary_callback.selected_ol_stats: ${selected_ol_stats}
  main_callback.metric_summary_callback.selected_cl_stats: ${selected_cl_stats}
  # scenario_filter.log_names: [2021.08.24.17.34.27_veh-45_01118_01346]
  # selected_simulation_metrics: [ego_acceleration_statistics, ego_jerk_statistics]


# deduce params
config_name_training: ${model_name}_training
config_name_simulation: default_simulation
config_name_nuboard: default_nuboard
config_path: ../nuplan/planning/script/config # Location of path with all training configs
config_path_training: ${config_path}/training
config_path_simulation: ${config_path}/simulation
config_path_nuboard: ${config_path}/nuboard
save_dir_training: ${oc.env:NUPLAN_EXP_ROOT}/training
save_dir_simulation: ${oc.env:NUPLAN_EXP_ROOT}/simulation
experiment: ${model_name}_experiment
model: ${model_name}_model
log_dir: ${oc.env:NUPLAN_EXP_ROOT}/training/${experiment}/${model} #/2023.04.07.15.21.26_jiale_best # where to get trained model from


# for training override
training_params:
  group: ${save_dir_training}
  cache.cache_path: ${save_dir_training}/cache
  experiment_name: ${experiment}
  job_name: ${model_name}_model
  py_func: ${model_fct}
  +training: training_${model_name}_model
  scenario_builder: ${dataset} # [nuplan, nuplan_challenge, nuplan_mini]
  scenario_filter.limit_total_scenarios: ${nb_scenarios} # Choose 500 scenarios to train with
  lightning.trainer.params.accelerator: ${lightning_accelerator}  # ddp is not allowed in interactive environment, using ddp_spawn instead - this can bottleneck the data pipeline, it is recommended to run training outside the notebook
  lightning.trainer.params.max_epochs: ${nb_epochs}
  data_loader.params.batch_size: ${batch_size}
  data_loader.params.num_workers: ${nb_workers}


# for simulation override
simulation_params:
  group: ${save_dir_simulation}
  experiment_name: ${experiment}
  # ego_controller: perfect_tracking_controller   # already set with challenge
  # observation: box_observation                  # already set with challenge
  planner: ${planner}
  +simulation: ${challenge}
  scenario_builder: ${dataset}
  scenario_filter: ${scenarios}
  scenario_filter.num_scenarios_per_type: ${nb_scenarios_per_type}
  main_callback.metric_summary_callback.model_name: ${model_name}_model

ml_simulation_params:
  model: ${model}

